======================================================================
  RTComponent: flag_builder specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  @author 白井哲平<shibaurartm@gmail.com>

  ありません

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=flag_builder 
#   --module-desc='calculate a inclination, convert a proportion and output a proportion. ' --module-version=1.0.0 --module-vendor=shirai 
#   --module-category=Category --module-comp-type=STATIC 
#   --module-act-type=PERIODIC --module-max-inst=1 
#   --config=dt:double:0.5 --config=Flag:double:5000 
#   --inport=DataIn:RTC::TimedDouble --outport=DataOut:RTC::TimedDouble 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: flag_builder
Description: calculate a inclination, convert a proportion and output a proportion. 
Version:     1.0.0
Vendor:      shirai
Category:    Category
Kind:        DataFlowComponent
Comp. Type:  STATIC
Act. Type:   PERIODIC
MAX Inst.:   1
Lang:        C++
Lang Type:   

Overview:    数値を受け取り、その数値が閾値を超えると閾値を超えた時
             の数値の上昇度(傾き)を計算する。この上昇度(傾き)を三角
             関数におけるtanとし、これをsinに変換することで上昇度の
             大きさを0～1の値にして出力する。
In/Out:      入力：数値
             出力：0～1の数値
Algorithm:   なし
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated]     implemented

[on_deactivated]   implemented

[on_execute]       implemented
	Description:   InPortの値がFlag(閾値)を越えた時、dt(コンフィギュ
	               レーション)秒における値の上昇度(傾き)を求める。こ
	               の上昇度を三角関数のtanとし、sinに変換し0～1の値を
	               出力する。

[on_aborting]

[on_error]

[on_reset]

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

	Name:        DataIn
	PortNumber:  0
	Description: 数値を受け取る
	PortType: 
	DataType:    RTC::TimedDouble
	MaxOut: 
	[Data Elements]
		Name:
		Type:            RTC::TimedDouble
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        DataOut
	PortNumber:  0
	Description: InPortの数値がFlag(閾値)を越えた時、数値の上昇度(傾
	             き)を求め、その上昇度の大きさを0～1の値で表現し出力
	             する。
	PortType: 
	DataType:    RTC::TimedDouble
	MaxOut: 
	[Data Elements]
		Name:
		Type:            RTC::TimedDouble
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	Configuration:
		Name:            dt dt
		Description:     何秒間の数値の上昇度(傾き)を求めるかを決める。
		Type:            double
		DefaultValue:    double 0.5
		Unit:            
		Range:           
		Constraint:      

		Name:             Flag
		Description:     
		Type:            double
		DefaultValue:     5000
		Unit:            
		Range:           
		Constraint:      

# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

